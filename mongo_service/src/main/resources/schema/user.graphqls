type Article @key(fields: "authorId") @extends {
    authorId: String! @external
    author: User
}

type User {
    id: ID!
    name: String!
    age: Int!
    gender: String!
}

input CreateUserDto {
    name: String!
    age: Int!
    gender: String!
}

input UpdateUserDto {
    name: String
    age: Int
    gender: String
}

type Query {
    getAllUsers: [User]
    getUserById(UserId: ID!): User
}

type Mutation {
    createNewUser(createUserDto: CreateUserDto) : User
    updateUserById(id: ID!, updateUserDto: UpdateUserDto!) : User!
    deleteUserById(id:ID!) : Boolean
}